//========================================================================
//========================================================================
//  Settings
//  Values are true/false
//========================================================================
//========================================================================

$html-active-line-change: true;
// HTML Line Color Changing
$conform-style-script-tags: true;
// Conform internal/inline <script> and <style> tags within HTML
$style-vendor-prefix: true;
// Set Vendor Prefixes to a different color
$split-vendor-prefix: true;




//========================================================================
//========================================================================
//  Editor Colors
//========================================================================
//========================================================================

$background: #222222;
$foreground: #f6f3e8;
$gutter: #202020;
$cursor: #fff;




//========================================================================
//========================================================================
//  Functions
//========================================================================
//========================================================================

@function mono($input) {
    @return rgb($input, $input, $input);
}




//========================================================================
//========================================================================
//  Colors
//========================================================================
//========================================================================

//====== Mono ======//
$black: mono(0);
$deep-black: mono(25);
$mid-black: mono(55);
$gray: mono(70);
$highlight: mono(150);
$white: mono(225);
$bright-white: mono(255);

//====== Browns ======//
$tan: #D6D7AF;
$dark-tan: #544E44;

//====== Blues ======//
$blue-green: #6FE0C2;
$frost: rgb(195, 245, 255);

//====== Reds ======//
$red: #EE0F04;
$faded-red: rgb(245, 100, 75);
$error-red: rgb(150, 50, 50);

//====== Greens ======//
$green: #abc837;
$light-green: #CEDF99;
$faded-green: #9F9D6D;

//====== Yellows ======//
$yellow: #DFC47D;
$orange: #e8bf6a;


//========================================================================
//========================================================================
//  Styling
//========================================================================
//========================================================================

//====================================
//  General
//====================================

//==========// General Editor //==========//

.CodeMirror{
    background-color: $background;
    color: $foreground;

    &-gutters {
        background-color: $gutter;
        padding: 0px;
    }
    &-overwrite, &-cursor{
        border-left: 1.5px solid $cursor;
        border-bottom: none;
    }
    &-scroll {
        background-color: $background;
        color: $foreground;
    }
    &-activeline-background{
        color: $blue-green;
        background: $blue-green;
    }
    &.find-highlighting{
        div.CodeMirror-selected{
             background: $red;
        }
    }
    .CodeMirror{
        &.find-highlighting{
            .CodeMirror-selected{
                background: $red;
            }
        }
        &-selected {
            background: $tan;
            opacity: 0.1;
        }
        &-linenumbers{
            color: $red;
        }
        &-matchingbracket{
            color: $blue-green !important;
            background: none;
        }
        &-matchingtag {
            color: $blue-green;
            background: $blue-green;
        }
    }
    &-focused {
        .CodeMirror{
            &-activeline-background{
                background: $dark-tan;
            }
            &-activeline{
                .CodeMirror-gutter-elt {
                    background: $deep-black;
                    color: $bright-white;
                }
                .inline-widget .CodeMirror-gutter-elt {
                    color: $gray;
                }
            }
            &-selected{
                background: $tan;
                opacity: 0.1;
            }
        }
    }
}


//==========// General Code //==========//

.cm{
    &-atom{
        color: $green;
    }
    &-attribute{
        color: $tan;
    }
    &-string{
        color: $green;
    }
    &-def{
        color: $blue-green;
    }
    &-hr {
        color: #d68686;
    }
    &-number{
        color: $blue-green;
    }
    &-operator{
        color:$tan;
    }
    &-variable-2{
        color: $red;
    }
    &-meta{
        color: $tan;
    }
    &-variable, &-variable-3, &-bracket {
        color: $tan;
    }
    &-comment {
        color: $gray;
    }
    &-error{
        color: $error-red;
    }
    &-minus {
        color: $faded-red;
    }
    &-header {
        color: $red;
    }
    &-link {
        color: #b77fdb;
        text-decoration: none;
    }
    &-rangeinfo {
        color: #6c71c4;
    }
    &-keyword{
        color: $yellow;
    }
    &-builtin, .cm-quote {
        color: $tan;
    }
    &-qualifier{
        color: $light-green;
    }
    &-tag{
        color: $red;
    }
    &-property {
        color: $orange;
    }
}

//==========// Non-Editor Styling //==========//

#image-holder, #not-editor {
    background-color: $background;
}
#image-holder {
    color: $foreground;
}


$css-selectors: $light-green;
// .my-element, #myElement, div
$css-psuedo-elements: $blue-green;
// :hover
$css-important-tags: $red;
// ||:|| !important;
$css-properties: $orange;
// background: || ;
$css-values: $green;
// ||: rgb(0, 0, 0);
$css-vendor-prefix: $tan;
// -webkit-border-radius
// Check /scss/user-settings for options
$css-variable-properties: $faded-red;
// Verdana, Arial, etc.
$css-at-rules: $blue-green;
// @media screen -AND- @if, @for for Sass/Less
$css-strings: $green;
// "in between quotes"
$css-integers: $green;
// 1, 2, 3, 4
$css-comments: $gray;
// This is a comment!
$sass-variables: $faded-red;
// $mycolor: ||;
$sass-operators: $blue-green;
// + - / = % ^

//====================================
//    CSS
//====================================

.cm-m-css{
    &.cm{
        &-atom{
            color: $css-values;
        }
        &-property{
            color: $css-properties;
        }
        &-tag, &-builtin, &-qualifier{
            color: $css-selectors;
        }
        &-variable{
            color: $css-variable-properties;
            &-2{
                color: $sass-variables;
            }
            &-3{
                color: $css-psuedo-elements;
            }
        }
        &-string{
            color: $css-strings;
        }
        &-def{
            color: $css-at-rules;
        }
        &-number{
            color: $css-integers;
        }
        &-operator{
            color: $sass-operators;
        }
        &-comment{
            color: $css-comments;
        }
        &-keyword{
            color: $css-important-tags;
            font-weight: bolder;
        }
        @if $style-vendor-prefix {
            @if $split-vendor-prefix{
                &-meta{
                    color: $css-vendor-prefix;
                }
                &-meta + &-variable, &-meta + &-property, &-meta + &-atom{
                    color: $css-properties;
                }
            }@else{
                &-meta, &-meta + &-variable, &-meta + &-property, &-meta + &-atom{
                    color: $css-vendor-prefix;
                }
            }
        } @else {
            &-meta{
                color: $css-properties;
            }
        }
    }
} // End CSS




//====================================
//    JavaScript
//====================================

.cm-m-javascript{


}// End JavaScript




//====================================
//    XML/HTML
//====================================

.cm-m-xml{
    &.cm{
        &-property{
            color: $yellow;
        }
        &-tag{
            color: $orange;
        }
        &-variable{
            color: $tan;
            &-2{
                color: $faded-red;
            }
            &-3{
                color: $blue-green;
            }
        }
        &-attribute{
            color: $tan;
        }
        &-string{
            color: $green;
        }
        &-def{
            color: $blue-green;
        }
        &-hr {
            color: #d68686;
        }
        &-number{
            color: $green;
        }
        &-attribute{
            color: $orange;
        }
        &-operator{
            color: $blue-green;
        }
        &-meta{
            color: mono(100);
        }
        &-bracket{
            color: $tan;
        }
        &-comment{
            color: $gray;
        }
        &-minus {
            color: $faded-red;
        }
        &-header {
            color: #d85896;
        }
        &-link {
            color: #b77fdb;
            text-decoration: none;
        }
        &-rangeinfo {
            color: #6c71c4;
        }
        &-keyword{
            color: $tan;
        }
        &-builtin{
            color: $light-green;
        }
        &-quote {
            color: $tan;
        }
        &-qualifier{
            color: $light-green;
        }
    }

    @if $html-active-line-change {
        &.CodeMirror{
            &-matchingtag {
                background: none;
                &.cm{
                    &-tag{
                        color: $white;
                    }
                    &-keyword{
                        color: $white;
                    }
                    &-attribute{
                        color: $tan;
                    }
                    &-string{
                        color: $light-green;
                    }
                }

            }
        }
    }

}// End XML/HTML




//====================================
//    PHP / C-Like Languages
//====================================

.cm-m-clike{

    &-atom{
        color: $green;
    }
    &-property{
        color: $orange;
    }
    &-tag{
        color: $light-green;
    }
    &-variable{
        color: $faded-red;
        &-2{
            color: $faded-red;
        }
        &-3{
            color: $blue-green;
        }
    }
    &-attribute{
        color: $tan;
    }
    &-string{
        color: $green;
    }
    &-def{
        color: $blue-green;
    }
    &-def + &-property{
        color: $white;
    }
    &-hr {
        color: #d68686;
    }
    &-number{
        color: $green;
    }
    &-attribute{
        color: $black;
    }
    &-operator{
        color: $blue-green;
    }
    &-bracket{
        color: $tan;
    }
    &-psuedo{
        color: $blue-green;
    }
    &-comment{
        color: $gray;
    }
    &-minus {
        color: $faded-red;
    }
    &-header {
        color: #d85896;
    }
    &-link {
        color: #b77fdb;
        text-decoration: none;
    }
    &-rangeinfo {
        color: #6c71c4;
    }
    &-keyword{
        color: $blue-green;
        font-weight: boler;
    }
    &-builtin{
        color: $light-green;
    }
    &-quote {
        color: $tan;
    }
    &-qualifier{
        color: $light-green;
    }
}

